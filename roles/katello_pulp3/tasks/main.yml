---
- name: install updates
  yum: name=* state=latest

- name: do facts module to get latest information
  setup:
  #- name: refresh facts
  #meta: clear_facts

- name: Put SELinux in permissive mode
  command: setenforce 0

- name: install deps 
  yum: 
    state: present
    name:
      - gcc
      - make
      - cmake
      - bzip2-devel
      - expat-devel
      - file-devel
      - glib2-devel
      - libcurl-devel
      - libmodulemd2-devel
      - ninja-build
      - libxml2-devel
      - python36-devel
      - python36-gobject
      - rpm-devel
      - openssl-devel
      - sqlite-devel
      - xz-devel
      - zchunk-devel
      - zlib-devel
      - swig3
      - python3-setuptools
      - python3-subscription-manager-rhsm

#work around for setup tools bug      
- name: install newer setup tools
  command: pip3 install setuptools --upgrade
  #- name: delete old setuptools
  #shell: "rm -rf /usr/lib/python3.6/site-packages/setuptools* -rf"

- name: correct /var/lib/pulp permissions (adding group writable), fixed in 2.21.1
  file:
    path: '/var/lib/pulp/'
    mode: '774'
    owner: apache
    group: pulp

- include_role:
    name: "{{ item }}"
  with_items:
    - pulp_database
    - pulp_database_config
    - pulp_workers
    - pulp_resource_manager
    - pulp_content
    - pulp_api
    - pulp_redis
  vars:
    pulp_default_admin_password: password
    pulp_settings_file: /etc/pulp/settings.py
    pulp_requirements_dir: "https://raw.githubusercontent.com/pulp/pulpcore/master/"
    pulp_plugin_source_dir: "git+https://github.com/pulp/pulpcore-plugin.git#egg=pulpcore-plugin"
    pulp_source_dir: "git+https://github.com/pulp/pulpcore.git@3.6.3#egg=pulpcore"
    pulp_install_plugins:
      pulp-2to3-migrate:
        app_label: "pulp-2to3-migration"
        source_dir: "git+https://github.com/pulp/pulp-2to3-migration.git#egg=pulp-2to3-migration"
      pulp-file:
        app_label: "file"
        source_dir: "git+https://github.com/pulp/pulp_file.git@1.2.0#egg=pulp-file"
      pulp-container:
        app_label: "container"
        source_dir: "git+https://github.com/pulp/pulp_container.git@2.0.1#egg=pulp-docker"
      pulp-ansible:
        app_label: "ansible"
        source_dir: "git+https://github.com/pulp/pulp_ansible.git@0.3.0#egg=pulp-ansible"
      pulp-certguard:
        app_label: "certguard"
        source_dir: "git+https://github.com/pulp/pulp-certguard.git@1.0.2#egg=pulp-certguard"
      pulp-rpm:
        prereq_role: 'pulp.pulp_rpm_prerequisites'
        app_label: "rpm"
        source_dir: "git+https://github.com/pulp/pulp_rpm.git@3.6.2#egg=pulp-rpm"
    pulp_settings:
      secret_key: secret
      content_origin: "{{ ansible_fqdn }}"
      TOKEN_AUTH_DISABLED: True
      REMOTE_USER_ENVIRON_NAME: "HTTP_REMOTE_USER"
      ANSIBLE_API_HOSTNAME: "{{ ansible_fqdn }}"
      AUTHENTICATION_BACKENDS: ['pulpcore.app.authentication.PulpNoCreateRemoteUserBackend']
      REST_FRAMEWORK__DEFAULT_AUTHENTICATION_CLASSES: ['rest_framework.authentication.SessionAuthentication', 'pulpcore.app.authentication.PulpRemoteUserAuthentication']
      ANSIBLE_CONTENT_HOSTNAME: "https://{{ ansible_fqdn }}/pulp_ansible/content/"
      PULP2_MONGODB:
        name: "pulp_database"
        seeds: "localhost:27017"
        #ssl: True
      databases:
        default:
            HOST: localhost
            ENGINE: django.db.backends.postgresql_psycopg2
            NAME: pulp
            USER: pulp
            PASSWORD: pulp
            PORT: 7878
    pulp_db_type: postgres
    pulp_use_system_wide_pkgs: true
    pulp_user: pulp
    pulp_group: pulp
    pulp_install_dir: /usr/local/lib/pulp
    postgresql_packages: rh-postgresql96
    postgresql_daemon: rh-postgresql96-postgresql
    postgresql_bin_path: /opt/rh/rh-postgresql96/root/bin
    postgresql_data_dir: /var/opt/rh/rh-postgresql96/lib/pgsql/data
    postgresql_config_path: /var/opt/rh/rh-postgresql96/lib/pgsql/data
    postgresql_global_config_options:
      - option: port
        value: 7878
    postgresql_databases:
      - name: pulp
        port: 7878
        user: pulp
        password: pulp
    postgresql_users:
      - name: pulp
        password: pulp
        role_attr_flags: CREATEDB
        port: 7878

- name: ensure httpd/conf.d/05-foreman-ssl.d
  file:
    path: /etc/httpd/conf.d/05-foreman-ssl.d/
    state: directory
    owner: apache
    group: apache


- name: Deploy reverse proxy configuration
  template:
    src: templates/pulp-reverse-proxy.conf.j2
    dest: /etc/httpd/conf.d/05-foreman-ssl.d/pulp-reverse-proxy.conf
    owner: root
    group: apache

- name: deploy docker registry proxy
  template:
    src: templates/docker_proxy.conf.j2
    dest: /etc/httpd/conf.d/05-foreman-ssl.d/docker_proxy.conf
    owner: root
    group: apache


- name: Delete old pulp_iso config
  file:
    path: '/etc/httpd/conf.d/pulp_iso.conf'
    state: absent

- name: Deploy pulp_file.conf for http
  template:
    src: templates/pulp_file.conf.j2
    dest: /etc/httpd/conf.d/pulp_file.conf
    owner: root
    group: apache

- name: Deploy pulp_file.conf for https
  template:
    src: templates/pulp_file.conf.j2
    dest: /etc/httpd/conf.d/05-foreman-ssl.d/pulp_file.conf
    owner: root
    group: apache


#ansible galaxy support
- name: Deploy pulp_ansible.conf for https
  template:
    src: templates/pulp_ansible.conf.j2
    dest: /etc/httpd/conf.d/05-foreman-ssl.d/pulp_ansible.conf
    owner: root
    group: apache

#docker capusle syncing support   
- name: Deploy ssl config for docker capsule syncing
  lineinfile:
    dest: /etc/httpd/conf.d/05-pulp-https.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: '.*SSLEngine on'
  with_items:
    - { regexp: '.*RequestHeader set SSL_CLIENT_S_DN_X509.*', line: 'RequestHeader set SSL_CLIENT_S_DN_X509 "%{SSL_CLIENT_S_DN_X509}s"'}
    - { regexp: '.*RequestHeader set SSL_CLIENT_S_DN .*', line: 'RequestHeader set SSL_CLIENT_S_DN "%{SSL_CLIENT_S_DN}s"'}
    - { regexp: '.*RequestHeader set SSL_SERVER_S_DN_OU.*', line: 'RequestHeader set SSL_SERVER_S_DN_OU "%{SSL_SERVER_S_DN_OU}s"'}
    - { regexp: '.*RequestHeader set SSL_CLIENT_VERIFY.*', line: 'RequestHeader set SSL_CLIENT_VERIFY "%{SSL_CLIENT_VERIFY}s"'}
    - { regexp: '.*RequestHeader set SSL_CLIENT_I_DN.*', line: 'RequestHeader set SSL_CLIENT_I_DN "%{SSL_CLIENT_I_DN}s"'}
    - { regexp: '.*IncludeOptional "/etc/httpd/conf.d/05-foreman-ssl.d/*.conf".*', line: 'IncludeOptional "/etc/httpd/conf.d/05-foreman-ssl.d/*.conf"'}

- name: Allow /etc/pulp to be readable by 2 and 3
  file:
    path: /etc/pulp/
    state: directory
    owner: apache
    group: pulp

- name: Configure smart proxy pulp3
  template:
    src: templates/pulpcore.yml
    dest: /etc/foreman-proxy/settings.d/pulpcore.yml

- name: restart foreman-proxy
  service:
    name: foreman-proxy
    state: restarted

- name: restart httpd
  service:
    name: httpd
    state: restarted
